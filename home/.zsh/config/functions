# Rails console
ccred=$(echo -e "\033[0;31m")
ccyellow=$(echo -e "\033[0;33m")
ccend=$(echo -e "\033[0m")

rc() { bundle exec rails c }

# Rails server
rs() { 
  if [[ -d public/assets ]]; then
    echo "${ccred}====================="
    echo "PUBLIC ASSETS EXISTS!"
    echo "=====================${ccend}"
  fi
  bundle exec rails s 
}

# ps + grep
psg() { ps auxww | grep $1 }

# Start pry (and load rails if available)
p() {
  if [ -f ./config/environment.rb ]; then
    pry -r ./config/environment -r ~/.zsh/modules/pry/rails.rb $1 $2 $3
  elif [ -f ./*.gemspec ]; then
    gem=`ls *.gemspec | cut -d "." -f 1`
    echo "Starting PRY with gem '$gem'"
    pry -Ilib -r ./lib/$gem.rb $1 $2 $3
  else
    pry
  fi
}

# bundle me happy
b() {
  bundle "$@"
}

# rename *.txt txt t2t
# a.txt => a.t2t
rename() {
  for f in $1; do 
    mv "$f" "${f%$2}$3"
  done
}

# Find a file / exclude .svn
f() {
  find . -name "$1" | grep -v ".svn"
}

# Start tig in status view if unstanged changes present
ti() {
  DIRTY=$(git status -s)
  if [[ "$DIRTY" != "" ]]; then
    tig status
  else
    tig "$@"
  fi
}

# define function to pack content in parallel
# requires http://compression.ca/pbzip2/
# pack target-filename file-spec
pack() {
  command -v pbzip2 >/dev/null 2>&1
  if [[ "$?" == "0" ]]; then
    # pbzip is installed
    tar cf $1.tar.bz2 --use-compress-prog=pbzip2 $2 
  else
    # Fall back to serial bzip
    tar cjf $1.tar.bz2 $2 
  fi
}

tunnel() {
  ssh -f guest@$1 -L 8080:$1:80 -N
}

# vim:ft=sh
