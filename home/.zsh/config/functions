# Rails console
ccred=$(echo -e "\033[0;31m")
ccgreen=$(echo -e "\033[0;32m")
ccyellow=$(echo -e "\033[0;33m")
ccend=$(echo -e "\033[0m")

rc() { bundle exec rails c }

# Rails server
rs() { 
  if [[ -d public/assets ]]; then
    echo "${ccred}====================="
    echo "PUBLIC ASSETS EXISTS!"
    echo "=====================${ccend}"
  fi
  rm -rf tmp/cache
  bundle exec rails s 
}

# ps + grep
psg() { ps auxww | grep $1 }

# Start pry (and load rails if available)
p() {
  if [ -f ./config/environment.rb ]; then
    pry -r ./config/environment -r ~/.zsh/modules/pry/rails.rb $1 $2 $3
  elif [ -f ./*.gemspec ]; then
    gem=`ls *.gemspec | cut -d "." -f 1`
    echo "Starting PRY with gem '$gem'"
    pry -Ilib -r ./lib/$gem.rb $1 $2 $3
  else
    pry
  fi
}

# bundle me happy
b() {
  bundle "$@"
}

# Find a file / exclude .svn
f() {
  find . -name "$1" | grep -v ".svn"
}

# Start tig in status view if unstanged changes present
ti() {
  DIRTY=$(git status -s)
  if [[ "$DIRTY" != "" ]]; then
    tig status
  else
    tig "$@"
  fi
}

# SSH Tunnel
tunnel() {
  ssh -f guest@$1 -L 8080:$1:80 -N
}

# Node CLI
n() {
  command -v rlwrap >/dev/null 2>&1
  if [[ "$?" == "0" ]]; then
    env NODE_NO_READLINE=1 rlwrap -p Green -S "node > " node
  else
    brew install rlwrap
    echo "************************************"
    echo "Installed rlwrap, now try 'n' again"
    echo "************************************"
  fi
}

# run rspec via spring
rspec() {
  if [ -f ./bin/rspec ]; then
    bin/rspec "$@"
  else
    echo "You should really 'gem install spring && spring binstub rspec' here"
    bundle exec rspec "$@"
  fi
}
# vim:ft=sh
